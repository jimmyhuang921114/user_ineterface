#!/usr/bin/env python3 """  - API Hospital Medicine Management System - API Client Examples """ import requests import json from datetime import datetime from typing import Dict, List, Optional class HospitalSystemAPI: """API""" def __init__(self, base_url: str = "http://localhost:8000"): self.base_url = base_url self.session = requests.Session() # === API === def get_medicine_by_name(self, medicine_name: str) -> Dict: """""" try: response = self.session.get(f"{self.base_url}/api/medicine/detailed/{medicine_name}") response.raise_for_status() return response.json() except requests.exceptions.RequestException as e: print(f":  {medicine_name} : {e}") return {} def search_medicine_by_code(self, code: str) -> Dict: """""" try: response = self.session.get(f"{self.base_url}/api/medicine/search/code/{code}") response.raise_for_status() return response.json() except requests.exceptions.RequestException as e: print(f":  {code} : {e}") return {} def get_integrated_medicine(self, medicine_name: str) -> Dict: """ + """ try: response = self.session.get(f"{self.base_url}/api/medicine/integrated/{medicine_name}") response.raise_for_status() return response.json() except requests.exceptions.RequestException as e: print(f": : {e}") return {} def get_all_medicines_detailed(self) -> Dict: """""" try: response = self.session.get(f"{self.base_url}/api/medicine/detailed/") response.raise_for_status() return response.json() except requests.exceptions.RequestException as e: print(f": : {e}") return {} def search_medicines(self, query: str) -> Dict: """""" try: response = self.session.get(f"{self.base_url}/api/medicine/search/detailed/{query}") response.raise_for_status() return response.json() except requests.exceptions.RequestException as e: print(f": : {e}") return {} # === API === def get_all_patients(self) -> List[Dict]: """""" try: response = self.session.get(f"{self.base_url}/api/patients/") response.raise_for_status() return response.json() except requests.exceptions.RequestException as e: print(f": : {e}") return [] def get_patient_by_id(self, patient_id: int) -> Dict: """ID""" try: response = self.session.get(f"{self.base_url}/api/patients/{patient_id}") response.raise_for_status() return response.json() except requests.exceptions.RequestException as e: print(f":  {patient_id} : {e}") return {} def create_patient(self, patient_data: Dict) -> Dict: """""" try: response = self.session.post(f"{self.base_url}/api/patients/", json=patient_data) response.raise_for_status() return response.json() except requests.exceptions.RequestException as e: print(f": : {e}") return {} # === API === def get_all_records(self) -> List[Dict]: """""" try: response = self.session.get(f"{self.base_url}/api/records/") response.raise_for_status() return response.json() except requests.exceptions.RequestException as e: print(f": : {e}") return [] def get_patient_records(self, patient_id: int) -> List[Dict]: """""" try: response = self.session.get(f"{self.base_url}/api/records/patient/{patient_id}") response.raise_for_status() return response.json() except requests.exceptions.RequestException as e: print(f":  {patient_id} : {e}") return [] def create_record(self, record_data: Dict) -> Dict: """""" try: response = self.session.post(f"{self.base_url}/api/records/", json=record_data) response.raise_for_status() return response.json() except requests.exceptions.RequestException as e: print(f": : {e}") return {} # ===  === def export_integrated_medicines(self, save_file: str = None) -> Dict: """""" try: response = self.session.get(f"{self.base_url}/api/export/medicines/integrated") response.raise_for_status() data = response.json() if save_file: with open(save_file, 'w', encoding='utf-8') as f: json.dump(data, f, ensure_ascii=False, indent=2) print(f":  {save_file}") return data except requests.exceptions.RequestException as e: print(f": : {e}") return {} def export_patients(self, save_file: str = None) -> Dict: """""" try: response = self.session.get(f"{self.base_url}/api/export/patients") response.raise_for_status() data = response.json() if save_file: with open(save_file, 'w', encoding='utf-8') as f: json.dump(data, f, ensure_ascii=False, indent=2) print(f":  {save_file}") return data except requests.exceptions.RequestException as e: print(f": : {e}") return {} def export_records(self, save_file: str = None) -> Dict: """""" try: response = self.session.get(f"{self.base_url}/api/export/records") response.raise_for_status() data = response.json() if save_file: with open(save_file, 'w', encoding='utf-8') as f: json.dump(data, f, ensure_ascii=False, indent=2) print(f":  {save_file}") return data except requests.exceptions.RequestException as e: print(f": : {e}") return {} # ===  === def example_medicine_operations(): """""" print("") print("=" * 40) api = HospitalSystemAPI() # 1.  print("1. :") heart_medicine = api.get_medicine_by_name("") if heart_medicine: print(f" : {heart_medicine.get('', {}).get('', '')}") print(f" : {heart_medicine.get('', {}).get('', '')}") print(f" : {heart_medicine.get('', '')[:50]}...") # 2.  print("\n2. :") code_result = api.search_medicine_by_code("202801") if code_result: for name, data in code_result.items(): print(f" : {name}") print(f" : {data.get('matched_code', {})}") # 3.  print("\n3. :") integrated = api.get_integrated_medicine("") if integrated: print(f" : {integrated.get('status')}") if integrated.get('basic_info'): print(f" : {integrated['basic_info']['amount']}") if integrated.get('detailed_info'): print(f" : ") # 4.  print("\n4. '':") search_results = api.search_medicines("") for name in search_results.keys(): print(f" - {name}") def example_patient_operations(): """""" print("\n") print("=" * 40) api = HospitalSystemAPI() # 1.  print("1. :") patients = api.get_all_patients() for patient in patients: print(f" ID: {patient['id']}, : {patient['name']}, : {patient['age']}") # 2.  print("\n2. :") new_patient = { "name": "", "age": 35, "gender": "", "phone": "0911111111", "address": "", "medical_history": "", "allergies": "" } created_patient = api.create_patient(new_patient) if created_patient: print(f" :  ID: {created_patient['id']}") # 3.  print("\n3. :") new_record = { "patient_id": created_patient['id'], "visit_date": datetime.now().isoformat(), "diagnosis": "", "prescribed_medicines": [" 10mg"], "dosage_instructions": "", "doctor_notes": "" } created_record = api.create_record(new_record) if created_record: print(f" :  ID: {created_record['id']}") def example_records_operations(): """""" print("\n") print("=" * 40) api = HospitalSystemAPI() # 1.  print("1. :") records = api.get_all_records() for record in records: print(f" ID: {record['id']}, ID: {record['patient_id']}") print(f" : {record['diagnosis']}") print(f" : {', '.join(record['prescribed_medicines'])}") # 2.  if records: patient_id = records[0]['patient_id'] print(f"\n2.  {patient_id} :") patient_records = api.get_patient_records(patient_id) for record in patient_records: print(f" - {record['visit_date']}: {record['diagnosis']}") def example_export_operations(): """""" print("\n") print("=" * 40) api = HospitalSystemAPI() # 1.  print("1. :") medicines_data = api.export_integrated_medicines("exported_medicines.json") print(f"  {medicines_data.get('total_count', 0)} ") # 2.  print("\n2. :") patients_data = api.export_patients("exported_patients.json") print(f"  {patients_data.get('total_count', 0)} ") # 3.  print("\n3. :") records_data = api.export_records("exported_records.json") print(f"  {records_data.get('total_count', 0)} ") def practical_example(): """""" print("\n") print("=" * 50) api = HospitalSystemAPI() #  patients = api.get_all_patients() for patient in patients: print(f"\n: {patient['name']} (ID: {patient['id']})") print(f" : {patient['age']}, : {patient['gender']}") print(f" : {patient.get('allergies', '')}") #  records = api.get_patient_records(patient['id']) for record in records: print(f"\n  (ID: {record['id']}):") print(f" : {record['visit_date']}") print(f" : {record['diagnosis']}") print(f" : {', '.join(record['prescribed_medicines'])}") #  for medicine_name in record['prescribed_medicines']: #  clean_name = medicine_name.split(' ')[0] medicine_detail = api.get_medicine_by_name(clean_name) if medicine_detail: print(f"\n  {clean_name} :") basic_info = medicine_detail.get('', {}) print(f" : {basic_info.get('', '')}") print(f" : {basic_info.get('', '')}") #  integrated = api.get_integrated_medicine(clean_name) if integrated and integrated.get('basic_info'): stock = integrated['basic_info'] print(f" : {stock['amount']} ") print(f" : {stock['position']}") if __name__ == "__main__": print("API") print("=" * 50) try: #  example_medicine_operations() example_patient_operations() example_records_operations() example_export_operations() practical_example() print("\n") print("\n:") print(" - exported_medicines.json") print(" - exported_patients.json") print(" - exported_records.json") except Exception as e: print(f": : {e}") print(": : python3 enhanced_server.py")